### Spring Configurations
spring.application.name=demo-app-producer
spring.threads.virtual.enabled=true
### Kafka Configurations
kafka.listener.bootstrap-servers=localhost:29092
kafka.listener.schema-registry=http://localhost:8081
kafka.listener.events-auto-offset-reset-config=latest
kafka.listener.ack-producer-config=all
kafka.listener.ack-consumer-config=manual
kafka.listener.enable-avro-reader-config=false
kafka.listener.max-attempts-consumer-record=2
kafka.listener.max-producer-retry=3
kafka.listener.compression-type=snappy
kafka.listener.type-partitioner=UniformStickyPartitioner
kafka.listener.enable-reactive-project=false
kafka.listener.client-id=${spring.application.name}
### Management Actuator
management.endpoint.health.probes.enabled=true
management.endpoint.health.group.liveness.include=ping
management.endpoint.health.group.readiness.include=ping
management.endpoint.health.show-details=always
management.endpoints.web.exposure.include=metrics,info,health
management.health.livenessstate.enabled=true
management.health.readinessstate.enabled=true
management.metrics.distribution.percentiles-histogram.http.server.requests=true
management.metrics.tags.instance.name=${INSTANCE_NAME:my-instance-name}
management.metrics.tags.instance.ip=${INSTANCE_IP:my-instance-ip}
management.metrics.tags.env=${ENV:local}
management.metrics.tags.server=${SERVER:onPremise}
management.metrics.tags.team=my_team
management.metrics.tags.service.name=${spring.application.name}
management.otlp.metrics.export.url=http://localhost:4318/v1/metrics
management.otlp.metrics.export.aggregation-temporality=cumulative
management.otlp.metrics.export.step=10s
management.otlp.metrics.export.base-time-unit=milliseconds
management.tracing.sampling.probability=1.0
management.otlp.tracing.export.enabled=true
management.opentelemetry.resource-attributes.service.name=${spring.application.name}
management.opentelemetry.resource-attributes.cluster=local
management.otlp.tracing.endpoint=http://localhost:4318/v1/traces
### open Telemetry Configurations
otel.exporter.otlp.protocol=grpc
otel.exporter.otlp.endpoint=http://localhost:4317
otel.resource.attributes.service.name=${spring.application.name}
otel.traces.exporter=otlp
otel.instrumentation.kafka.enabled=true
